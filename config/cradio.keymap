// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

    keymap {
        compatible = "zmk,keymap";
        default_later {
            bindings = <
            &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P
            &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI
            &hm LSHFT Z &hm LCTRL X &hm LGUI C  &hm LALT V  &kp B       &kp N       &hm RALT M  &hm RGUI COMMA &hm RCTRL DOT  &hm RSHFT FSLH
                                                &kp SPACE   &mo 1       &to 3       &to 2
            >;
        };

        util_layer {
            bindings = <
            &kp ESC     &trans      &trans      &trans      &trans      &trans      &trans      &kp INS     &kp DEL     &kp BSPC
            &kp TAB     &trans      &trans      &trans      &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp RET
            &kp LSHFT   &kp LCTRL   &kp LGUI    &kp LALT    &trans      &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &kp RSHFT
                                                &none       &none       &to 3       &to 2
            >;
        };

        symbol_layer {
            bindings = <
            &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR    &kp PLUS    &kp EQUAL
            &kp BSLH    &kp PIPE    &kp GRAVE   &kp LBRC    &kp LBKT    &kp RBKT    &kp RBRC    &trans      &kp AT      &kp TILDE2
            &kp LSHFT   &kp LCTRL   &kp LGUI    &kp LALT    &kp LPAR    &kp RPAR    &kp UNDER   &kp MINUS   &kp SQT     &kp NUHS
                                                &kp SPACE   &to 0       &to 3       &to 2
            >;
        };

        number_layer {
            bindings = <
            &trans      &trans      &trans      &trans      &trans      &trans      &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp BSPC
            &to 4       &trans      &trans      &trans      &trans      &trans      &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp RET
            &kp LSHFT   &kp LCTRL   &kp LGUI    &kp LALT    &trans      &kp KP_N0   &kp KP_N1   &kp KP_N2   &kp KP_N3   &trans
                                                &kp SPACE   &to 0       &to 3       &to 2
            >;
        };

        function_layer {
            bindings = <
            &trans      &trans      &trans      &trans      &trans      &kp F1      &kp F2      &kp F3      &kp F4      &trans
            &trans      &trans      &trans      &trans      &trans      &kp F5      &kp F6      &kp F7      &kp F8      &trans
            &kp LSHFT   &kp LCTRL   &kp LGUI    &kp LALT    &trans      &kp F9      &kp F10     &kp F11     &kp F12     &trans
                                                &kp SPACE   &to 0       &to 3       &to 2
            >;
                };
    };
};